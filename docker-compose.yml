# ============================================================================
# E-Commerce Assignment - QE180214
# Docker Compose Configuration
# ============================================================================
# 
# CHỈ EXPOSE 1 PORT DUY NHẤT: 5173 (Web Application)
#
# USAGE:
#   docker-compose up -d
#   
# ACCESS:
#   http://localhost:5173
#
# ARCHITECTURE:
#   - Web App (Port 5173) ← User truy cập
#   - API (Internal) ← Web app gọi
#   - PostgreSQL (Internal) ← API gọi
#
# ============================================================================

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13
    container_name: ecommerce-postgres-dev
    environment:
      POSTGRES_DB: ${DB_NAME:-ecommerce}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Data Protection Key Storage
  redis:
    image: redis:7-alpine
    container_name: ecommerce-redis-dev
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # E-Commerce API (Internal only - không expose port ra ngoài)
  api:
    build:
      context: .
      dockerfile: src/ECommerce.API/Dockerfile
    container_name: ecommerce-api-dev
    # Port chỉ dùng trong Docker network, không expose ra host
    expose:
      - "8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENV:-Development}
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=${DB_NAME:-ecommerce};Username=${DB_USER:-postgres};Password=${DB_PASSWORD:-postgres}
      - ConnectionStrings__Redis=redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # E-Commerce Web Frontend (PORT DUY NHẤT RA NGOÀI)
  web:
    build:
      context: .
      dockerfile: src/ECommerce.Web/Dockerfile
    container_name: ecommerce-web-dev
    ports:
      - "5173:8080"  # CHỈ expose port 5173 duy nhất
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENV:-Development}
      - ApiSettings__BaseUrl=http://api:8080
      - ConnectionStrings__Redis=redis:6379
    depends_on:
      - api
      - redis
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: