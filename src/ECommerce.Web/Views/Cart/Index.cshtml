@model ECommerce.Web.Models.CartViewModel
@{
    ViewData["Title"] = "Shopping Cart";
}

<div class="container mt-4">
    <h1 class="mb-4">
        <i class="bi bi-cart3"></i> Shopping Cart
    </h1>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model.Items.Count == 0)
    {
        <div class="alert alert-info">
            <h4>Your cart is empty</h4>
            <p>Browse our products and add items to your cart.</p>
            <a href="@Url.Action("Index", "Products")" class="btn btn-primary">
                <i class="bi bi-shop"></i> Continue Shopping
            </a>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-lg-8">
                <div class="card mb-4">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0">Cart Items (@Model.TotalItems items)</h5>
                    </div>
                    <div class="card-body">
                        @foreach (var item in Model.Items)
                        {
                            <div class="row mb-4 pb-4 border-bottom cart-item align-items-center" data-item-id="@item.CartItemId">
                                <div class="col-md-2">
                                    @if (!string.IsNullOrEmpty(item.ProductImageUrl))
                                    {
                                        <img src="@item.ProductImageUrl" class="img-fluid rounded shadow-sm" alt="@item.ProductName" style="max-height: 100px; object-fit: cover;">
                                    }
                                    else
                                    {
                                        <div class="bg-secondary rounded d-flex align-items-center justify-content-center shadow-sm" style="height: 100px;">
                                            <i class="bi bi-image text-white" style="font-size: 2rem;"></i>
                                        </div>
                                    }
                                </div>
                                <div class="col-md-4">
                                    <h5 class="mb-1">@item.ProductName</h5>
                                    <p class="text-muted mb-0">
                                        <i class="bi bi-tag-fill"></i> $@item.ProductPrice.ToString("F2")
                                    </p>
                                </div>
                                <div class="col-md-3">
                                    <label class="form-label small text-muted mb-1">Quantity</label>
                                    <div class="btn-group align-items-center cart-qty-group" role="group" aria-label="Quantity controls">
                                        <button class="btn btn-outline-danger btn-qty rounded-circle quantity-minus" type="button" title="Decrease quantity" aria-label="Decrease quantity">
                                            <i class="bi bi-dash-lg"></i>
                                        </button>
                                        <input type="number" class="form-control text-center fw-bold quantity-input" 
                                               value="@item.Quantity" min="1" max="99" 
                                               data-item-id="@item.CartItemId"
                                               data-price="@item.ProductPrice"
                                               aria-label="Quantity"
                                               style="max-width: 60px;">
                                        <button class="btn btn-outline-success btn-qty rounded-circle quantity-plus" type="button" title="Increase quantity" aria-label="Increase quantity">
                                            <i class="bi bi-plus-lg"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="col-md-2 text-end">
                                    <label class="form-label small text-muted mb-1">Subtotal</label>
                                    <p class="mb-0">
                                        <strong class="item-subtotal text-primary fs-5">$@item.Subtotal.ToString("F2")</strong>
                                    </p>
                                </div>
                                <div class="col-md-1 text-end">
                                    <form method="post" asp-action="Remove" asp-controller="Cart" class="d-inline">
                                        <input type="hidden" name="cartItemId" value="@item.CartItemId" />
                                        <button type="submit" class="btn btn-sm btn-outline-danger btn-remove-item" 
                                                onclick="return confirm('Remove this item from cart?')"
                                                title="Remove item" aria-label="Remove item">
                                            <i class="bi bi-x-lg"></i>
                                        </button>
                                    </form>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <div class="d-flex justify-content-between">
                    <a href="@Url.Action("Index", "Products")" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left"></i> Continue Shopping
                    </a>
                    <form method="post" asp-action="Clear" asp-controller="Cart" class="d-inline">
                        <button type="submit" class="btn btn-outline-danger" onclick="return confirm('Clear all items from cart?')">
                            <i class="bi bi-trash"></i> Clear Cart
                        </button>
                    </form>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="card">
                    <div class="card-header bg-success text-white">
                        <h5 class="mb-0">Order Summary</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-2">
                            <span>Items:</span>
                            <span id="total-items">@Model.TotalItems</span>
                        </div>
                        <div class="d-flex justify-content-between mb-3">
                            <span>Subtotal:</span>
                            <span id="subtotal">$@Model.TotalAmount.ToString("F2")</span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between mb-3">
                            <strong>Total:</strong>
                            <strong id="total" class="text-success">$@Model.TotalAmount.ToString("F2")</strong>
                        </div>
                        <a href="@Url.Action("Checkout", "Cart")" class="btn btn-success btn-lg w-100">
                            <i class="bi bi-credit-card"></i> Proceed to Checkout
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <style>
        /* moved to site.css: .cart-qty-group, .btn-qty, .quantity-input, .cart-item hover, remove button icon */
    </style>

    <script>
        $(document).ready(function() {
            // Handle quantity changes
            $('.quantity-minus').click(function() {
                var input = $(this).siblings('.quantity-input');
                var value = parseInt(input.val());
                if (value > 1) {
                    $(this).prop('disabled', true);
                    input.val(value - 1);
                    updateQuantity(input);
                }
                $(this).prop('disabled', false);
            });

            $('.quantity-plus').click(function() {
                var input = $(this).siblings('.quantity-input');
                var value = parseInt(input.val());
                if (value < 99) {
                    $(this).prop('disabled', true);
                    input.val(value + 1);
                    updateQuantity(input);
                }
                $(this).prop('disabled', false);
            });

            $('.quantity-input').change(function() {
                var value = parseInt($(this).val());
                if (value < 1) {
                    $(this).val(1);
                } else if (value > 99) {
                    $(this).val(99);
                }
                updateQuantity($(this));
            });

            function updateQuantity(input) {
                var cartItemId = input.data('item-id');
                var quantity = parseInt(input.val());
                var price = parseFloat(input.data('price'));

                // disable both buttons during request
                var group = input.closest('.cart-qty-group');
                var minusBtn = group.find('.quantity-minus');
                var plusBtn = group.find('.quantity-plus');
                minusBtn.prop('disabled', true);
                plusBtn.prop('disabled', true);

                $.ajax({
                    url: '@Url.Action("UpdateQuantity", "Cart")',
                    type: 'POST',
                    data: {
                        cartItemId: cartItemId,
                        quantity: quantity
                    },
                    success: function(response) {
                        if (response.success) {
                            // Update subtotal for this item
                            var subtotal = price * quantity;
                            input.closest('.cart-item').find('.item-subtotal').text('$' + subtotal.toFixed(2));
                            
                            // Recalculate cart total
                            var total = 0;
                            var totalItems = 0;
                            $('.quantity-input').each(function() {
                                var itemPrice = parseFloat($(this).data('price'));
                                var itemQty = parseInt($(this).val());
                                total += itemPrice * itemQty;
                                totalItems += itemQty;
                            });
                            
                            $('#total-items').text(totalItems);
                            $('#subtotal').text('$' + total.toFixed(2));
                            $('#total').text('$' + total.toFixed(2));

                            // Show success animation
                            input.closest('.cart-item').addClass('border-success');
                            setTimeout(function() {
                                input.closest('.cart-item').removeClass('border-success');
                            }, 500);
                        } else {
                            alert('Failed to update quantity: ' + response.message);
                        }
                    },
                    error: function() {
                        alert('An error occurred while updating quantity');
                    },
                    complete: function() {
                        minusBtn.prop('disabled', false);
                        plusBtn.prop('disabled', false);
                    }
                });
            }
        });
    </script>
}
